"""create all models

Revision ID: 17301793ba4f
Revises: 
Create Date: 2025-08-31 11:22:19.405968

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '17301793ba4f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('warehouses',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_main', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('deliveries',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('delivery_number', sa.String(), nullable=False),
    sa.Column('source_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('destination_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('expected_packages', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('created', 'ready_to_pick', 'picked', 'in_transit', 'arrived', 'received', 'redirected', name='deliverystatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['destination_id'], ['warehouses.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('delivery_number')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('supervisor', 'manager', 'driver', name='userrole'), nullable=False),
    sa.Column('warehouse_id', sa.UUID(as_uuid=False), nullable=True),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('actor_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('delivery_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['delivery_id'], ['deliveries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('driver_routes',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('driver_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('route_date', sa.DateTime(), nullable=False),
    sa.Column('warehouse_id', sa.UUID(as_uuid=False), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scan_counters',
    sa.Column('delivery_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('stage', sa.Enum('source_pick', 'dest_arrival', 'dest_receive', name='scanstage'), nullable=False),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['delivery_id'], ['deliveries.id'], ),
    sa.PrimaryKeyConstraint('delivery_id', 'stage')
    )
    op.create_table('scan_events',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('delivery_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('stage', sa.Enum('source_pick', 'dest_arrival', 'dest_receive', name='scanstage'), nullable=False),
    sa.Column('scanned_by', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('warehouse_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('client_device_id', sa.String(), nullable=True),
    sa.Column('client_ts', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['delivery_id'], ['deliveries.id'], ),
    sa.ForeignKeyConstraint(['scanned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transfer_orders',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('delivery_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('from_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('to_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('expected_packages', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['delivery_id'], ['deliveries.id'], ),
    sa.ForeignKeyConstraint(['from_id'], ['warehouses.id'], ),
    sa.ForeignKeyConstraint(['to_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transfer_orders')
    op.drop_table('scan_events')
    op.drop_table('scan_counters')
    op.drop_table('driver_routes')
    op.drop_table('audit_log')
    op.drop_table('users')
    op.drop_table('deliveries')
    op.drop_table('warehouses')
    # ### end Alembic commands ###
